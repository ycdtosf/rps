<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>55.0</apiVersion>
    <decisions>
        <name>Evaluate_Outcome</name>
        <label>Evaluate Outcome</label>
        <locationX>710</locationX>
        <locationY>815</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Tie</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Move__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Load_Other_Player_Move.Move__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Incoming_Player_as_Tie</targetReference>
            </connector>
            <label>Tie</label>
        </rules>
        <rules>
            <name>Incoming_Player_Wins</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Load_Outcomes.Winner__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Move__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Load_Outcomes.Loser__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Load_Other_Player_Move.Move__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Incoming_Player_as_Winner</targetReference>
            </connector>
            <label>Incoming Player Wins</label>
        </rules>
        <rules>
            <name>Other_Player_Wins</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Load_Outcomes.Winner__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Load_Other_Player_Move.Move__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Load_Outcomes.Loser__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Move__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Incoming_Player_as_Loser</targetReference>
            </connector>
            <label>Other Player Wins</label>
        </rules>
    </decisions>
    <decisions>
        <name>Other_Player_Status</name>
        <label>Other Player Status</label>
        <locationX>666</locationX>
        <locationY>455</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Other_Player_Status_Pending</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Other_Player.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_This_Player_Status</targetReference>
            </connector>
            <label>Pending</label>
        </rules>
        <rules>
            <name>Other_Player_Status_Played</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Other_Player.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Played</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Load_Other_Player_Move</targetReference>
            </connector>
            <label>Played</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Player Move : After Created {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Player Move : After Created</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Other_Player</name>
        <label>Get Other Player</label>
        <locationX>666</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Other_Player_Status</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Game__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Player__r.Game__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Player__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Player__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Load_Other_Player_Move</name>
        <label>Load Other Player Move</label>
        <locationX>710</locationX>
        <locationY>575</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Load_Outcomes</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Player__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Other_Player.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PlayerMove__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Load_Outcomes</name>
        <label>Load Outcomes</label>
        <locationX>710</locationX>
        <locationY>695</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Evaluate_Outcome</targetReference>
        </connector>
        <filterLogic>(1 AND 2) OR (3 AND 4)</filterLogic>
        <filters>
            <field>Winner__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Move__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Loser__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Load_Other_Player_Move.Move__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Winner__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Load_Other_Player_Move.Move__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Loser__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Move__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Outcome__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Incoming_Player_as_Loser</name>
        <label>Update Incoming Player as Loser</label>
        <locationX>842</locationX>
        <locationY>935</locationY>
        <connector>
            <targetReference>Update_Other_Player_as_Winner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Player__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Loser</stringValue>
            </value>
        </inputAssignments>
        <object>Player__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Incoming_Player_as_Tie</name>
        <label>Update Incoming Player as Tie</label>
        <locationX>314</locationX>
        <locationY>935</locationY>
        <connector>
            <targetReference>Update_Other_Player_as_Tie</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Player__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Tie</stringValue>
            </value>
        </inputAssignments>
        <object>Player__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Incoming_Player_as_Winner</name>
        <label>Update Incoming Player as Winner</label>
        <locationX>578</locationX>
        <locationY>935</locationY>
        <connector>
            <targetReference>Update_Other_Player_as_Loser</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Player__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Winner</stringValue>
            </value>
        </inputAssignments>
        <object>Player__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Other_Player_as_Loser</name>
        <label>Update Other Player as Loser</label>
        <locationX>578</locationX>
        <locationY>1055</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Other_Player.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Loser</stringValue>
            </value>
        </inputAssignments>
        <object>Player__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Other_Player_as_Tie</name>
        <label>Update Other Player as Tie</label>
        <locationX>314</locationX>
        <locationY>1055</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Other_Player.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Tie</stringValue>
            </value>
        </inputAssignments>
        <object>Player__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Other_Player_as_Winner</name>
        <label>Update Other Player as Winner</label>
        <locationX>842</locationX>
        <locationY>1055</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Other_Player.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Winner</stringValue>
            </value>
        </inputAssignments>
        <object>Player__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_This_Player_Status</name>
        <label>Update This Player Status</label>
        <locationX>50</locationX>
        <locationY>575</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Player__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Played</stringValue>
            </value>
        </inputAssignments>
        <object>Player__c</object>
    </recordUpdates>
    <start>
        <locationX>540</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Other_Player</targetReference>
        </connector>
        <object>PlayerMove__c</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
</Flow>
